#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["VolumetericEmoji", "VR_Cinema_Low_poly_2021_1MB", "seats"]
    float3 xformOp:translate = (0, 0.07309818, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def "VR_Cinema_Low_poly_2021_1MB" (
        references = @VR_Cinema_Low_poly_2021_1MB.usdz@
    )
    {
        reorder nameChildren = ["VolumetericEmoji", "Vintage_Movie_Camera", "Speaker_right_2", "Speaker_right_3", "Speaker_front", "Speaker_back", "Speaker_back_1", "Speaker_left_2", "Speaker_left_3", "Speaker_left", "Speaker_right_1", "Materials", "Meshes"]
        quatf xformOp:orient = (0.99999994, 0, 0, 0)
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        float3 xformOp:translate = (-2.1124427, 0.14850998, 0.22642887)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "lambert149"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert147"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 109.5)
                float2 ui:nodegraph:realitykit:subgraphOutputs:size = (182, 99)
            }

            over "lambert179"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert148"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert167"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert178"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert168"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert180"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert183"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "lambert172"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }
        }

        over "Meshes"
        {
            over "Sketchfab_model"
            {
                over "_c0492f05f164194982df82efe2d78b5_fbx"
                {
                    over "RootNode"
                    {
                        over "pCube654"
                        {
                            over "polySurface11214"
                            {
                                over "polySurface11218" (
                                    active = false
                                )
                                {
                                }

                                over "polySurface11217"
                                {
                                    over "polySurface11217_lambert181_0"
                                    {
                                        over "polySurface11217_lambert181_0"
                                        {
                                        }
                                    }
                                }
                            }
                        }

                        over "polySurface11216" (
                            active = false
                        )
                        {
                        }

                        over "polySurface11205"
                        {
                            over "polySurface11205_lambert184_0"
                            {
                                over "polySurface11205_lambert184_0" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert184> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    uniform token subdivisionScheme = "none"
                                }
                            }
                        }

                        over "polySurface11206"
                        {
                            over "polySurface11206_lambert166_0"
                            {
                                over "polySurface11206_lambert166_0" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        def Cube "Speaker_left_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 1.5707963, 0)
            }
        )
        {
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.7071067, 0, 0.70710677, 0)
            float3 xformOp:scale = (99.99997, 199.99997, 99.99997)
            float3 xformOp:translate = (1154.0583, 635.79614, 390.57022)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_left_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -11.460378
                float gain = -7.2
                uniform token info:id = "RealityKit.SpatialAudio"
                float reverbLevel = -12.698646
            }
        }

        def Cube "Speaker_left_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 1.5707963, 0)
            }
        )
        {
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.70710677, 0, 0.7071067, 0)
            float3 xformOp:scale = (99.99996, 199.99998, 99.99996)
            float3 xformOp:translate = (1154.0793, 740.04913, 1053.5491)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_left_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -11.460378
                float gain = -7.2
                uniform token info:id = "RealityKit.SpatialAudio"
                float reverbLevel = -12.698646
            }
        }

        def Cube "Speaker_left" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 1.5707963, 0)
            }
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpatialAudio", "Vintage_Movie_Camera"]
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.70710677, 0, 0.70710677, 0)
            float3 xformOp:scale = (99.99999, 199.99998, 99.99999)
            float3 xformOp:translate = (1154.0793, 515.1966, -398.29398)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_left/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -17.026983
                uniform token info:id = "RealityKit.SpatialAudio"
            }
        }

        def Cube "Speaker_right_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, -1.5707963, 0)
            }
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpatialAudio", "Vintage_Movie_Camera"]
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.70710677, 0, -0.70710677, 0)
            float3 xformOp:scale = (99.99997, 199.99994, 99.99997)
            float3 xformOp:translate = (-1153.5586, 581.6343, -440.61166)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_right_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -17.026983
                uniform token info:id = "RealityKit.SpatialAudio"
            }
        }

        def "Vintage_Movie_Camera" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            references = @VintageMovieCamera.usdz@
        )
        {
            reorder nameChildren = ["DirectionalLight_camera", "Cube_light", "Anchoring", "geom", "ImageBasedLight"]
            rel material:binding = None (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (0.70710677, 0, 0.70710677, 0)
            float3 xformOp:scale = (199.99998, 199.99998, 199.99998)
            float3 xformOp:translate = (5.972946, 551.8072, 1459.677)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "geom"
            {
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                over "realistic"
                {
                    over "geo"
                    {
                        float3 xformOp:translate = (0, 0.062285904, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        over "lod0"
                        {
                            over "camera_movie_vintage_base_realistic_lod0"
                            {
                            }
                        }
                    }

                    over "materials"
                    {
                        over "usdpreviewsurface3sg"
                        {
                            string inputs:camera_movie_vintage_realistic_ao_1:varname (
                                customData = {
                                    dictionary realitykit = {
                                        float2 positionInSubgraph = (193.5, 1089)
                                        float2 sizeInSubgraph = (250, 53)
                                    }
                                }
                            )
                            string inputs:camera_movie_vintage_realistic_bc_1:varname (
                                customData = {
                                    dictionary realitykit = {
                                        float2 positionInSubgraph = (503.5, 1089)
                                        float2 sizeInSubgraph = (250, 53)
                                    }
                                }
                            )
                            string inputs:camera_movie_vintage_realistic_m_1:varname (
                                customData = {
                                    dictionary realitykit = {
                                        float2 positionInSubgraph = (813.5, 1089)
                                        float2 sizeInSubgraph = (250, 53)
                                    }
                                }
                            )
                            string inputs:camera_movie_vintage_realistic_n_1:varname (
                                customData = {
                                    dictionary realitykit = {
                                        float2 positionInSubgraph = (1123.5, 1089)
                                        float2 sizeInSubgraph = (250, 53)
                                    }
                                }
                            )
                            string inputs:camera_movie_vintage_realistic_r_1:varname (
                                customData = {
                                    dictionary realitykit = {
                                        float2 positionInSubgraph = (1433.5, 1089)
                                        float2 sizeInSubgraph = (250, 53)
                                    }
                                }
                            )
                            token outputs:realitykit:vertex
                            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1536, 365)
                            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

                            over "camera_movie_vintage_realistic_mtlx"
                            {
                                float2 ui:nodegraph:node:pos = (1260, 365)
                                float2 ui:nodegraph:node:size = (250, 199)
                            }

                            over "camera_movie_vintage_realistic_n_1_mtlx"
                            {
                                float2 ui:nodegraph:node:pos = (330, 358.5)
                                float2 ui:nodegraph:node:size = (250, 199)
                            }

                            over "Lookup_st"
                            {
                                float2 ui:nodegraph:node:pos = (-496.99948, 515.0072)
                                float2 ui:nodegraph:node:size = (145, 127)
                                int ui:nodegraph:node:stackingOrder = 2
                            }

                            over "camera_movie_vintage_realistic_n_1_mtlx_scale"
                            {
                                float2 ui:nodegraph:node:pos = (640, 297)
                                float2 ui:nodegraph:node:size = (60, 36)
                            }

                            over "camera_movie_vintage_realistic_n_1_mtlx_offset"
                            {
                                float2 ui:nodegraph:node:pos = (950, 297)
                                float2 ui:nodegraph:node:size = (61.5, 36.5)
                            }

                            over "camera_movie_vintage_realistic_m_1_mtlx"
                            {
                                float2 ui:nodegraph:node:pos = (640, 733.5)
                                float2 ui:nodegraph:node:size = (250, 199)
                            }

                            over "camera_movie_vintage_realistic_bc_1_mtlx"
                            {
                                float2 ui:nodegraph:node:pos = (950, 903)
                                float2 ui:nodegraph:node:size = (250, 199)
                            }

                            over "camera_movie_vintage_realistic_ao_1_mtlx"
                            {
                                float2 ui:nodegraph:node:pos = (640, 474.5)
                                float2 ui:nodegraph:node:size = (250, 199)
                            }

                            over "camera_movie_vintage_realistic_r_1_mtlx"
                            {
                                float2 ui:nodegraph:node:pos = (330, 99.5)
                                float2 ui:nodegraph:node:size = (250, 199)
                            }
                        }
                    }
                }
            }

            def RealityKitComponent "ImageBasedLight"
            {
                bool enableRotation = 0
                uniform token info:id = "RealityKit.ImageBasedLight"
                float intensityExponent = 10.331298
                bool isGlobalIBL = 0
            }

            def Xform "DirectionalLight_camera" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = None (
                    bindMaterialAs = "weakerThanDescendants"
                )
                quatf xformOp:orient = (0.70710677, 0, -0.70710677, 0)
                float3 xformOp:scale = (2.5000005, 2.5000005, 2.5000005)
                float3 xformOp:translate = (0.37692118, 1.3992805, -0.047019124)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "DirectionalLight"
                {
                    float3 color = (1, 0.941711, 0.94757426)
                    token info:id = "RealityKit.DirectionalLight"

                    def RealityKitStruct "Shadow"
                    {
                        bool isEnabled = 1
                    }
                }
            }

            def Cube "Cube_light" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Vintage_Movie_Camera/Cube_light/DefaultMaterial>
                double size = 0.2
                quatf xformOp:orient = (0.70710677, 0, -0.70710677, 0)
                float3 xformOp:scale = (0.5000001, 0.5000001, 0.050000012)
                float3 xformOp:translate = (0.29776335, 1.4004211, -0.019291162)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Vintage_Movie_Camera/Cube_light/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }

                def RealityKitComponent "Anchoring"
                {
                    uniform token info:id = "RealityKit.Anchoring"

                    def RealityKitStruct "descriptor"
                    {
                        token type = "Object"
                    }
                }
            }
        }

        def Cube "Speaker_right_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, -1.5707963, 0)
            }
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpatialAudio", "Vintage_Movie_Camera"]
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.70710677, 0, -0.70710677, 0)
            float3 xformOp:scale = (99.99995, 199.9999, 99.99995)
            float3 xformOp:translate = (-1153.5321, 673.3584, 206.42007)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_right_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -17.026983
                uniform token info:id = "RealityKit.SpatialAudio"
            }
        }

        def Cube "Speaker_right_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, -1.5707963, 0)
            }
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpatialAudio", "Vintage_Movie_Camera"]
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.7071067, 0, -0.70710677, 0)
            float3 xformOp:scale = (99.99992, 199.99985, 99.99992)
            float3 xformOp:translate = (-1153.5094, 756.7553, 847.5978)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_right_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -17.026983
                uniform token info:id = "RealityKit.SpatialAudio"
            }
        }

        def Cube "Speaker_front" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, -1.5707963, 0)
            }
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpatialAudio", "Vintage_Movie_Camera"]
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.70710677, 0, -0.70710677, 0)
            float3 xformOp:scale = (99.99995, 199.9999, 99.99995)
            float3 xformOp:translate = (7.5164175, 581.58813, -1048.6074)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_front/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -17.026983
                uniform token info:id = "RealityKit.SpatialAudio"
            }
        }

        def Cube "Speaker_back" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, -1.5707963, 0)
            }
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpatialAudio", "Vintage_Movie_Camera"]
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.7071067, 0, -0.70710677, 0)
            float3 xformOp:scale = (99.99992, 199.99985, 99.99992)
            float3 xformOp:translate = (624.4757, 850.7654, 1374.8462)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_back/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -17.026983
                uniform token info:id = "RealityKit.SpatialAudio"
            }
        }

        def Cube "Speaker_back_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, -1.5707963, 0)
            }
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpatialAudio", "Vintage_Movie_Camera"]
            rel material:binding = </Root/VR_Cinema_Low_poly_2021_1MB/Materials/lambert147> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.5
            quatf xformOp:orient = (0.70710677, 0, -0.7071067, 0)
            float3 xformOp:scale = (99.9999, 199.9998, 99.9999)
            float3 xformOp:translate = (-722.6617, 824.3765, 1368.1953)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/VR_Cinema_Low_poly_2021_1MB/Speaker_back_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directivityFocus = 0
                float directLevel = -17.026983
                uniform token info:id = "RealityKit.SpatialAudio"
            }
        }

        def "VolumetericEmoji" (
            active = true
            references = @../../../../VolumetericEmoji.usda@
        )
        {
            quatf xformOp:orient = (0.99999994, 0, 0, 0)
            float3 xformOp:scale = (5000, 5000, 5000)
            float3 xformOp:translate = (211.24428, -22.160816, -22.64289)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "VFXEmitter"
            {
                over "currentState"
                {
                    double emissionDuration = 5
                    bool isSpawningEnabled = 0
                    bool loops = 0
                    float3 shapeSize = (0.3, 0.3, 0.3)

                    over "mainEmitter"
                    {
                        float3 acceleration = (0, 0.1, 0)
                        float birthRate = 15
                        float birthRateVariation = 5
                        double particleLifeSpanVariation = 1.5
                        float particleSize = 1
                    }
                }
            }
        }
    }

    def Xform "seats" (
        active = true
    )
    {
        reorder nameChildren = ["Group", "Group_1", "Group_2", "Group_3", "Group_4", "Group_5", "Group_6", "Group_7", "row_3", "row_2", "row_1"]
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, -0.07309818, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Xform "row_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_6", "Cube_5", "Cube_4", "Cube_3", "Cube_2", "Cube_1", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_8", "Cube_7"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -3.95616, -9.932916)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert178> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.3287354, 4.5345755, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_1/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert178> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.1334023, 4.5345755, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_1/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert178> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.9296157, 4.5345755, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_1/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert178> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.328344, 4.5345755, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_1/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert178> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.4240503, 4.5345755, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_1/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert178> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.0203953, 4.5345755, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_1/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_10", "Cube_11", "Cube_12", "Cube_14", "Cube_15", "Cube_2", "Cube_3", "Cube_13", "Cube_9", "Cube_8", "Cube_7", "Cube_5", "Cube_4"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -3.47756, -7.8896704)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_2/Cube_4/DefaultMaterial>
                double size = 0.2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.6443896, 4.5345755, 9.252735)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_2/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_2/Cube_8/DefaultMaterial>
                double size = 0.2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0441484, 4.504265, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/seats/row_2/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_2/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.8670719, 4.5345755, 9.280792)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_2/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_2/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32182926, 4.4940977, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/seats/row_2/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_2/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5276933, 4.4940977, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/seats/row_2/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_2/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.0551, 4.510809, 9.40632)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/seats/row_2/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_2/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.387316, 4.5345755, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/seats/row_2/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_7", "Cube_8", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_5", "Cube_4", "Cube_3", "Cube_2"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_3/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.24091, 4.501527, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_3/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_3/Cube_4/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.723457, 4.501527, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_3/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_3/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.920299, 4.501527, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_3/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_3/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (140, 140)
                int ui:nodegraph:node:stackingOrder = 7
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0817876, 4.501527, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_3/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_3/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (180, 180)
                int ui:nodegraph:node:stackingOrder = 9
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32168365, 4.501527, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_3/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_3/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (220, 220)
                int ui:nodegraph:node:stackingOrder = 11
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5060432, 4.501527, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_3/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_3/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (260, 260)
                int ui:nodegraph:node:stackingOrder = 13
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.058968, 4.501527, 9.32115)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_3/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_4" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_7", "Cube_8", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_5", "Cube_4", "Cube_3", "Cube_2"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_4/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.24091, 4.985857, 10.758778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_4/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_4/Cube_4/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.723457, 4.985857, 10.758778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_4/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_4/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.920299, 4.985857, 10.758778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_4/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_4/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (140, 140)
                int ui:nodegraph:node:stackingOrder = 7
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0817876, 4.985857, 10.758778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_4/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_4/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (180, 180)
                int ui:nodegraph:node:stackingOrder = 9
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32168365, 4.985857, 10.758778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_4/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_4/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (220, 220)
                int ui:nodegraph:node:stackingOrder = 11
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5060432, 4.985857, 10.758778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_4/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_4/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (260, 260)
                int ui:nodegraph:node:stackingOrder = 13
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.058968, 4.985857, 10.758778)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_4/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_5" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_7", "Cube_8", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_5", "Cube_4", "Cube_3", "Cube_2"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_5/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.24091, 5.482872, 12.007994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_5/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_5/Cube_4/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.723457, 5.482872, 12.007994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_5/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_5/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.920299, 5.482872, 12.007994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_5/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_5/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (140, 140)
                int ui:nodegraph:node:stackingOrder = 7
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0817876, 5.482872, 12.007994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_5/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_5/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (180, 180)
                int ui:nodegraph:node:stackingOrder = 9
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32168365, 5.482872, 12.007994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_5/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_5/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (220, 220)
                int ui:nodegraph:node:stackingOrder = 11
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5060432, 5.482872, 12.007994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_5/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_5/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (260, 260)
                int ui:nodegraph:node:stackingOrder = 13
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.058968, 5.482872, 12.007994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_5/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_6" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_7", "Cube_8", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_5", "Cube_4", "Cube_3", "Cube_2"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_6/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.24091, 5.97005, 13.485064)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_6/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_6/Cube_4/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.723457, 5.97005, 13.485064)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_6/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_6/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.920299, 5.97005, 13.485064)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_6/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_6/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (140, 140)
                int ui:nodegraph:node:stackingOrder = 7
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0817876, 5.97005, 13.485064)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_6/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_6/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (180, 180)
                int ui:nodegraph:node:stackingOrder = 9
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32168365, 5.97005, 13.485064)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_6/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_6/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (220, 220)
                int ui:nodegraph:node:stackingOrder = 11
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5060432, 5.97005, 13.485064)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_6/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_6/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (260, 260)
                int ui:nodegraph:node:stackingOrder = 13
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.058968, 5.97005, 13.485064)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_6/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_7" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_7", "Cube_8", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_5", "Cube_4", "Cube_3", "Cube_2"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_7/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.275754, 6.4897985, 14.851038)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_7/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_7/Cube_4/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.723457, 6.4795585, 14.859829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_7/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_7/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.920299, 6.4795585, 14.859829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_7/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_7/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (140, 140)
                int ui:nodegraph:node:stackingOrder = 7
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0817876, 6.4795585, 14.859829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_7/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_7/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (180, 180)
                int ui:nodegraph:node:stackingOrder = 9
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32168365, 6.4795585, 14.859829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_7/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_7/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (220, 220)
                int ui:nodegraph:node:stackingOrder = 11
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5060432, 6.4795585, 14.859829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_7/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_7/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (260, 260)
                int ui:nodegraph:node:stackingOrder = 13
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.058968, 6.4795585, 14.859829)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_7/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_8" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_7", "Cube_8", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_5", "Cube_4", "Cube_3", "Cube_2"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (100, 100)
            int ui:nodegraph:node:stackingOrder = 5
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_8/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.275754, 6.996649, 16.117304)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_8/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_8/Cube_4/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.723457, 6.9864087, 16.126097)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_8/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_8/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.920299, 6.9864087, 16.126097)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_8/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_8/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (140, 140)
                int ui:nodegraph:node:stackingOrder = 7
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0817876, 6.9864087, 16.126097)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_8/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_8/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (180, 180)
                int ui:nodegraph:node:stackingOrder = 9
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32168365, 6.9864087, 16.126097)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_8/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_8/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (220, 220)
                int ui:nodegraph:node:stackingOrder = 11
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5060432, 6.9864087, 16.126097)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_8/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_8/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (260, 260)
                int ui:nodegraph:node:stackingOrder = 13
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.058968, 6.9864087, 16.126097)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_8/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_9" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_1", "Cube_6", "Cube_7", "Cube_8", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_5", "Cube_4", "Cube_3", "Cube_2"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (120, 120)
            int ui:nodegraph:node:stackingOrder = 6
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_9/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-9.275754, 7.50197, 17.529129)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_9/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_9/Cube_4/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (60, 60)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-5.723457, 7.4917297, 17.537922)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_9/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_9/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (100, 100)
                int ui:nodegraph:node:stackingOrder = 5
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-3.920299, 7.4917297, 17.537922)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_9/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_9/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (140, 140)
                int ui:nodegraph:node:stackingOrder = 7
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.0817876, 7.4917297, 17.537922)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_9/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_9/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (180, 180)
                int ui:nodegraph:node:stackingOrder = 9
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-0.32168365, 7.4917297, 17.537922)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_9/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_9/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (220, 220)
                int ui:nodegraph:node:stackingOrder = 11
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (1.5060432, 7.4917297, 17.537922)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_9/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_9/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (260, 260)
                int ui:nodegraph:node:stackingOrder = 13
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (5.058968, 7.4917297, 17.537922)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_9/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_10" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_4", "Cube_3", "Cube_2", "Cube_1", "Cube_19", "Cube_20", "Cube_21", "Cube_9", "Cube_10", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_16", "Cube_17", "Cube_18", "Cube_8", "Cube_7", "Cube_6", "Cube_5"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (140, 140)
            int ui:nodegraph:node:stackingOrder = 7
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_4/DefaultMaterial>
                double size = 0.2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-10.200659, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (40, 40)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-8.353287, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (80, 80)
                int ui:nodegraph:node:stackingOrder = 4
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-4.7319627, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (120, 120)
                int ui:nodegraph:node:stackingOrder = 6
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.9839141, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (160, 160)
                int ui:nodegraph:node:stackingOrder = 8
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-1.1338488, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (200, 200)
                int ui:nodegraph:node:stackingOrder = 10
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.6518017, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_16" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_16/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (240, 240)
                int ui:nodegraph:node:stackingOrder = 12
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (4.2208767, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_16/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_18" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_18/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (280, 280)
                int ui:nodegraph:node:stackingOrder = 14
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (6.027133, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_18/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (40, 40)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-11.957309, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_20" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_10/Cube_20/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (320, 320)
                int ui:nodegraph:node:stackingOrder = 16
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (8.130039, 7.9607844, 19.027355)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_10/Cube_20/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }

        def Xform "row_11" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cube_4", "Cube_3", "Cube_2", "Cube_1", "Cube_24", "Cube_25", "Cube_26", "Cube_7", "Cube_8", "Cube_19", "Cube_18", "Cube_11", "Cube_12", "Cube_13", "Cube_14", "Cube_15", "Cube_16", "Cube_17", "Cube_20", "Cube_21", "Cube_23", "Cube_10", "Cube_9", "Cube_6", "Cube_5"]
            rel material:binding = </Root/Scene/VR_Cinema_Low_poly_2021_1MB/Materials/lambert166> (
                bindMaterialAs = "weakerThanDescendants"
            )
            float2 ui:nodegraph:node:pos = (160, 160)
            int ui:nodegraph:node:stackingOrder = 8
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -2.943522, -6.58)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Cube_4" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_4/DefaultMaterial>
                double size = 0.2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-10.200659, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_6" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_6/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (40, 40)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-8.353287, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_6/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_10" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_10/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (80, 80)
                int ui:nodegraph:node:stackingOrder = 4
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-4.7319627, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_10/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_12" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_12/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (120, 120)
                int ui:nodegraph:node:stackingOrder = 6
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-2.9839141, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_12/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_14" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_14/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (160, 160)
                int ui:nodegraph:node:stackingOrder = 8
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-1.1338488, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_14/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_16" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_16/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (200, 200)
                int ui:nodegraph:node:stackingOrder = 10
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0.6518017, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_16/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_20" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_20/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (240, 240)
                int ui:nodegraph:node:stackingOrder = 12
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (4.2208767, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_20/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_2/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (40, 40)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-11.957309, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_24" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_24/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (300, 300)
                int ui:nodegraph:node:stackingOrder = 15
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (6.893567, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_24/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_26" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_26/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (340, 340)
                int ui:nodegraph:node:stackingOrder = 17
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (8.631977, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_26/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_8" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_8/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (80, 80)
                int ui:nodegraph:node:stackingOrder = 4
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (-6.4066963, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_8/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }

            def Cube "Cube_18" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/seats/row_11/Cube_18/DefaultMaterial>
                double size = 0.2
                float2 ui:nodegraph:node:pos = (280, 280)
                int ui:nodegraph:node:stackingOrder = 14
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (2.443543, 8.485675, 20.28268)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:surface.connect = </Root/seats/row_11/Cube_18/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }
            }
        }
    }
}

